#+TITLE: Project00 Key_Terms
#+LANGUAGE: en
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t
#+OPTIONS: html-postamble:nil
#+STARTUP: showeverything entitiespretty

NOTE: Be sure, when you are searching that they are logical defintions, that is
they are definitions that relate to math and Logic.

Example
* Superman Cannot be jumping really high
** identify
Superman is sometimes debated around his flying abilities
Some say that he is merely jumping and due to his speed and 
strength it appears to you and I that he is merely jumping and
moving his body to go up and down after that.
** Define
This is obviously false.  Superman is indeed levitating and not
Jumping
** Example/Explanation
If Superman were jumping when he catches Lois Lane she would be cut in half
due to the speed and trajectory of superman being the man of steel. This is because
he would have to slow/stop to the same speed as Lois to catch her and then "rejump".
He visually does not appear to be 'rejumping' and Lois isnt cut in half.  DONE!
** Non-Trivial Test question
What would be the best way to describe Superman's flight


a. He jumps and with his strength and speed is able to alter his path


b. He flys like a bird and flaps his wings


c. He levitates, he's an alien "HEELLLLLOOOO!"


d. Why do I care about Superman again, he's in the D.C. universe ... so dark and terrible movies!

ANSWER - c

Contrapositive

Converse

inverse - negate antecedent and conclusion of a conditional. Example - s = p \rightarrow q, inverse of s = \not p \rightarrow \not q

R: real numbers

Z: integers

Q: rational numbers - the set of all numbers that can be expressed as a fraction of two integers.

predicate

Domain

CoDomain - For every x in the domain of f, the codomain contains all - and only - the numbers y = f(x)

quantifier

antecedent

consequent - second part of a conditional

Set

Fallacy

biconditional - p if and only if q

sufficient condition

necessary condition

~p - negation of p. ~0 = 1, ~1 = 0

p ^ q

p V q

p XOR q - exclusive or. returns 1 iff p != q

p == q

p -> q

p <--> q - biconditional. Returns 1 iff p == q

Three dots in a triangle

upside down A

Backwards E - existential quantifier. "There exists" or "there is at least one"

union

intersection

Commutative laws - you can change the order of arguments for certain functions, and the output is the same. 
Example: p \wedge q == q \wedge p

associative laws

distributive laws

identity laws - states that x == x, a == a, etc.

negation laws

double negative law

idempotent laws - a \wedge a == a; a \vee a == a

universal bound laws

De morgan's laws

absorption laws - a \wedge (a \vee b) == a; a \vee (a \wedge b) == a

negations of t and c

vacuously true

Modus Ponens - method of affirming. Allows you to construct arguments from statements.

Modus Tollens

Elimination: valid argument form

Transitivity: Valid Argument form

A \rightarrow B
B \rightarrow C
A == 1
Therefore, 
C == 1
